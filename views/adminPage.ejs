<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://fonts.googleapis.com/css?family=Poppins:100,100italic,200,200italic,300,300italic,regular,italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic"
      rel="stylesheet"
    />
    <title>Admin Page</title>
    <style>
      /* CSS styles for the admin page */
      body {
        font-family: "Poppins", sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f0f0f0;
      }

      .navbar {
        background-color: #333;
        color: #fff;
        padding: 10px 0;
        text-align: center;
        z-index: 1000;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
      }

      .navbar ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
      }

      .navbar li {
        display: inline-block;
        margin: 0 10px;
      }

      .navbar a {
        color: white;
        text-decoration: none;
        padding: 10px 15px;
        border-radius: 5px;
      }

      .navbar a:hover {
        background-color: #555;
      }

      .navbar .active {
        background-color: #555;
      }

      .footer {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #333;
        padding: 10px 0;
        text-align: center;
        z-index: 1000;
        color: white;
      }

      .footer h3 {
        margin: 0;
      }

      .container {
        max-width: 800px;
        margin: 80px auto 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      h1 {
        text-align: center;
        margin: 0;
      }
      h2 {
        margin: 0;
        font-size: 22px;
      }

      form {
        margin-bottom: 20px;
      }

      input[type="text"] {
        width: calc(100% - 10px);
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      button[type="submit"] {
        width: 100%;
        padding: 10px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      button[type="submit"]:hover {
        background-color: #0056b3;
      }

      ul {
        list-style-type: none;
        padding: 0;
      }

      .player-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: #f9f9f9;
        margin-bottom: 20px;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      .player-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
      }

      .player-details {
        flex: 1;
        margin-right: 20px;
      }

      .carousel {
        position: relative;
        width: 100%;
        height: 140px;
        overflow: hidden;
      }

      .carousel-image {
        display: none;
        width: 100%;
      }

      .active {
        display: block;
      }

      .btns {
        text-align: center;
        margin-top: 10px;
      }

      .prev,
      .next {
        cursor: pointer;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        padding: 10px;
        background-color: rgba(0, 0, 0, 0.5);
        color: #fff;
        border: none;
        outline: none;
        z-index: 1;
      }

      .prev {
        cursor: pointer;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        padding: 10px;
        background-color: rgba(0, 0, 0, 0.5);
        color: #fff;
        border: none;
        outline: none;
        z-index: 1;
      }

      .prev:hover {
        background-color: rgba(0, 0, 0, 0.8);
      }

      .next {
        cursor: pointer;
        position: absolute;
        top: 50%;
        right: 0;
        transform: translateY(-50%);
        padding: 10px;
        background-color: rgba(0, 0, 0, 0.5);
        color: #fff;
        border: none;
        outline: none;
        z-index: 1;
      }

      .next:hover {
        background-color: rgba(0, 0, 0, 0.8);
      }

      .button-container {
        text-align: right;
      }

      button:active {
        transform: scale(0.94);
        transition: all 0.2s ease-in-out;
      }
      button.editButton,
      button.deleteButton {
        padding: 8px 15px;
        margin-right: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.2s ease-in-out;
      }

      button.editButton {
        background-color: #28a745;
        color: #fff;
      }

      button.deleteButton {
        background-color: #dc3545;
        color: #fff;
      }

      button.editButton:hover,
      button.deleteButton:hover {
        opacity: 0.8;
      }

      .list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
      }
      .btns {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0, 0, 0); /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
        padding-top: 60px;
      }

      .modal-content {
        background-color: #fefefe;
        margin: 5% auto; /* 5% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
      }

      /* Modal Close Button */
      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
      }

      .close:hover,
      .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
      }

      .language-buttons {
        position: absolute;
        top: 60px;
        right: 20px;
        display: flex;
        gap: 10px;
      }

      .language-button {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .language-button:not(.active):hover {
        background-color: #0056b3;
      }

      .active {
        background-color: #28a745;
      }

      .basketball {
        position: fixed;
        bottom: 40px;
        right: 10px;
        width: 50px;
        height: auto;
        animation: bounce 0.5s infinite alternate;
      }

      @keyframes bounce {
        0% {
          transform: translateY(0);
        }
        100% {
          transform: translateY(-20px);
        }
      }
    </style>
  </head>
  <body>
    <img
      src="https://png.pngtree.com/png-vector/20230104/ourmid/pngtree-cartoon-illustration-of-basketball-png-image_6550046.png"
      alt="Basketball"
      class="basketball"
    />

    <div class="navbar">
      <ul>
        <li><a href="/main?lang=en"><%= __('main') %></a></li>
        <li><a href="/players?lang=en"><%= __('playersPage') %></a></li>
        <% if (isAdmin) { %>
        <li><a href="/adminPage?lang=en"><%= __('admin') %></a></li>
        <% } %>
        <li><a href="/history?lang=en"><%= __('history') %></a></li>
        <li><a href="/"><%= __('exit') %></a></li>
      </ul>
    </div>

    <div class="language-buttons">
      <button
        class="language-button"
        id="enButton"
        onclick="changeLanguage('en')"
      >
        <%= __('english') %>
      </button>
      <button
        class="language-button"
        id="ruButton"
        onclick="changeLanguage('ru')"
      >
        <%= __('russian') %>
      </button>
      <button
        class="language-button"
        id="kzButton"
        onclick="changeLanguage('kz')"
      >
        <%= __('kazakh') %>
      </button>
    </div>

    <div class="container">
      <div class="admin-features">
        <h2 style="margin-bottom: 10px"><%= __('addPlayer') %></h2>
        <form id="addItemForm" action="/admin/add" method="POST">
          <input
            type="text"
            name="firstName"
            placeholder="First Name"
            required
          />
          <input type="text" name="lastName" placeholder="Last Name" required />
          <input type="text" name="team" placeholder="Team Fullname" required />
          <input
            type="text"
            name="picture1"
            placeholder="Picture 1 URL"
            required
          />
          <input
            type="text"
            name="picture2"
            placeholder="Picture 2 URL"
            required
          />
          <input
            type="text"
            name="picture3"
            placeholder="Picture 3 URL"
            required
          />
          <button type="submit"><%= __('addPlayer') %></button>
        </form>
      </div>
      <h1><%= __('listOfPlayers') %></h1>
      <div class="player-list">
        <ul class="list">
          <% players.forEach(function(player) { %>
          <div class="player-card">
            <h2><%= player.firstName %> <%= player.lastName %></h2>
            <p><%= player.team.fullName %></p>
            <div class="carousel">
              <% player.pictures.forEach(function(picture, index) { %>
              <img
                src="<%= picture %>"
                alt="Player Image"
                class="carousel-image <%= index === 0 ? 'active' : '' %>"
              />
              <% }); %>
              <button class="prev">&#10094;</button>
              <button class="next">&#10095;</button>
            </div>
            <div class="btns">
              <button class="editButton"><%= __('edit') %></button>
              <button class="deleteButton"><%= __('delete') %></button>
            </div>
          </div>
          <% }); %>
        </ul>
      </div>
    </div>

    <!-- The Modal -->
    <div id="myModal" class="modal">
      <!-- Modal content -->
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2><%= __('editPlayer') %></h2>
        <input
          type="text"
          id="modalFirstName"
          placeholder="First Name"
          required
        />
        <input
          type="text"
          id="modalLastName"
          placeholder="Last Name"
          required
        />
        <input type="text" id="modalTeam" placeholder="Team" required />
        <input
          type="text"
          id="modalPicture1"
          placeholder="Picture 1 URL"
          required
        />
        <input
          type="text"
          id="modalPicture2"
          placeholder="Picture 2 URL"
          required
        />
        <input
          type="text"
          id="modalPicture3"
          placeholder="Picture 3 URL"
          required
        />
        <button onclick="updatePlayer()"><%= __('save') %></button>
      </div>
    </div>

    <footer class="footer">
      <h3>Samat SE-2006</h3>
    </footer>

    <script>
      document.querySelectorAll(".carousel").forEach(function (carousel) {
        let index = 0;
        const images = carousel.querySelectorAll(".carousel-image");

        function showImage(n) {
          images.forEach(function (image) {
            image.style.display = "none";
          });
          if (n >= images.length) {
            index = 0;
          }
          if (n < 0) {
            index = images.length - 1;
          }
          images[index].style.display = "block";
        }

        showImage(index);

        carousel.querySelector(".prev").addEventListener("click", function () {
          showImage(--index);
        });

        carousel.querySelector(".next").addEventListener("click", function () {
          showImage(++index);
        });
      });

      // Get the modal
      let modal = document.getElementById("myModal");

      // Get the button that opens the modal
      let btn = document.getElementsByClassName("editButton");
      let deleteButton = document.getElementsByClassName("deleteButton");
      // Get the <span> element that closes the modal
      let span = document.getElementsByClassName("close")[0];

      let previousFirstName;
      let previousLastName;

      // When the user clicks on the button, open the modal
      for (let i = 0; i < btn.length; i++) {
        btn[i].onclick = function () {
          modal.style.display = "block";

          // Get the player data from the card
          let playerCard = this.parentElement.parentElement;
          let playerName = playerCard.querySelector("h2").innerText.split(" ");
          previousFirstName = playerName[0]; // Store previous first name
          previousLastName = playerName[1]; // Store previous last name
          let team = playerCard.querySelector("p").innerText;
          let pictures = Array.from(
            playerCard.querySelectorAll(".carousel img")
          ).map((img) => img.src);

          // Populate the modal fields with current data
          document.getElementById("modalFirstName").value = previousFirstName;
          document.getElementById("modalLastName").value = previousLastName;
          document.getElementById("modalTeam").value = team;

          // Populate the modal picture fields with current data
          for (let i = 0; i < pictures.length; i++) {
            document.getElementById("modalPicture" + (i + 1)).value =
              pictures[i];
          }
        };

        deleteButton[i].onclick = function () {
          let playerCard = this.parentElement.parentElement;
          let playerName = playerCard.querySelector("h2").innerText.split(" ");
          previousFirstName = playerName[0]; // Store previous first name
          previousLastName = playerName[1]; // Store previous last name

          fetch("/admin/delete", {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              firstName: previousFirstName,
              lastName: previousLastName,
            }),
          })
            .then((response) => {
              if (!response.ok) {
                throw new Error("Network response was not ok");
              }
            })
            .then((data) => {
              console.log("Delete successful:");
              window.location.reload();
            })
            .catch((error) => {
              console.error(
                "There was a problem with your fetch operation:",
                error
              );
              // Handle errors here
            });
        };
      }

      // When the user clicks on <span> (x), close the modal
      span.onclick = function () {
        modal.style.display = "none";
      };

      // When the user clicks anywhere outside of the modal, close it
      window.onclick = function (event) {
        if (event.target == modal) {
          modal.style.display = "none";
        }
      };

      // Function to handle the HTTP POST request
      function updatePlayer() {
        // Get player data from modal inputs
        let firstName = document.getElementById("modalFirstName").value;
        let lastName = document.getElementById("modalLastName").value;
        let team = document.getElementById("modalTeam").value;
        let picture1 = document.getElementById("modalPicture1").value;
        let picture2 = document.getElementById("modalPicture2").value;
        let picture3 = document.getElementById("modalPicture3").value;

        // Create the payload object
        let payload = {
          previousFirstName: previousFirstName,
          previousLastName: previousLastName,
          firstName: firstName,
          lastName: lastName,
          team: team,
          pictures: [picture1, picture2, picture3],
        };

        // Send HTTP POST request to server
        fetch("/admin/update", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(payload),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
          })
          .then((data) => {
            console.log("Update successful:");
            window.location.reload();
            closeModal();
          })
          .catch((error) => {
            console.error(
              "There was a problem with your fetch operation:",
              error
            );
            // Handle errors here
          });
      }

      // Function to close the modal
      function closeModal() {
        // Get the modal
        let modal = document.getElementById("myModal");
        // Close the modal
        modal.style.display = "none";
      }

      function changeLanguage(lang) {
        const currentUrl = window.location.href;
        const urlWithoutParams = currentUrl.split("?")[0];
        const newUrl = `${urlWithoutParams}?lang=${lang}`;
        window.location.href = newUrl;
      }

      // Get the active language from the URL
      const params = new URLSearchParams(window.location.search);
      const activeLanguage = params.get("lang");

      // Add 'active' class to the button representing the active language
      if (activeLanguage) {
        const activeButton = document.getElementById(`${activeLanguage}Button`);
        activeButton.classList.add("active");
      }
    </script>
  </body>
</html>
